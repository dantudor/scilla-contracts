scilla_version 0 library ZiloSeedLP let one_msg = fun (msg : Message) => let nil_msg = Nil {Message} in Cons {Message} msg nil_msg let two_msgs = fun (msg1 : Message) => fun (msg2 : Message) => let msgs_tmp = one_msg msg2 in Cons {Message} msg1 msgs_tmp type Error = | CodeNotOwner | CodeNotPendingOwner | CodePendingOwnerNotEmpty let make_error = fun (result : Error) => let result_code = match result with | CodeNotOwner => Int32 -1 | CodeNotPendingOwner => Int32 -2 | CodePendingOwnerNotEmpty => Int32 -3 end in { _exception : "Error"; code : result_code } type Denom = | Zil | Token of ByStr20 type Coin = | Coin of Denom Uint128 let true = True let false = False let zero = Uint128 0 let one = Uint128 1 let none = None {ByStr20} contract ZiloSeedLP( init_owner: ByStr20, token_address: ByStr20, zilswap_address: ByStr20 ) field contract_owner : Option ByStr20 = Some {ByStr20} init_owner field pending_owner : Option ByStr20 = none field enabled : Bool = True procedure ThrowError(err : Error) e = make_error err; throw e end procedure IsOwner(address: ByStr20) maybe_current_owner <- contract_owner; match maybe_current_owner with | Some current_owner => is_owner = builtin eq current_owner address; match is_owner with | True => | False => err = CodeNotOwner; ThrowError err end | None => err = CodeNotOwner; ThrowError err end end procedure IsPendingOwner(address: ByStr20) maybe_pending_owner <- pending_owner; match maybe_pending_owner with | Some current_pending_owner => is_pending_owner = builtin eq current_pending_owner address; match is_pending_owner with | True => | False => err = CodeNotPendingOwner; ThrowError err end | None => err = CodeNotPendingOwner; ThrowError err end end transition TransferOwnership(new_owner: ByStr20) IsOwner _sender; o = Some {ByStr20} new_owner; pending_owner := o; e = {_eventname : "OwnershipTransferInitiated"; contract_owner : _sender; pending_owner : new_owner}; event e end transition AcceptOwnership() IsPendingOwner _sender; previous_contract_owner <- contract_owner; o = Some {ByStr20} _sender; contract_owner := o; pending_owner := none; e = {_eventname : "OwnershipTransferAccepted"; previous_contract_owner : previous_contract_owner; contract_owner : _sender}; event e end transition Disable() IsOwner _sender; enabled := false end transition Enable() IsOwner _sender; enabled := true end transition AddLiquidity( zil_amount : Uint128, token_amount : Uint128 ) e <- enabled; match e with | False => | True => current_block <- & BLOCKNUMBER; deadline_block = builtin badd current_block one; msg_to_token = { _tag : "IncreaseAllowance"; _recipient : token_address; _amount : zero; spender : zilswap_address; amount : token_amount }; msg_to_zilswap = { _tag : "AddLiquidity"; _recipient : zilswap_address; _amount : zil_amount; token_address : token_address; min_contribution_amount : zero; max_token_amount : token_amount; deadline_block : deadline_block }; msgs = two_msgs msg_to_token msg_to_zilswap; send msgs end end transition RemoveLiquidity( contribution_amount : Uint128, min_zil_amount : Uint128, min_token_amount : Uint128 ) IsOwner _sender; current_block <- & BLOCKNUMBER; deadline_block = builtin badd current_block one; msg_to_zilswap = { _tag : "RemoveLiquidity"; _recipient : zilswap_address; _amount : zero; token_address : token_address; contribution_amount : contribution_amount; min_zil_amount : min_zil_amount; min_token_amount : min_token_amount; deadline_block : deadline_block }; msgs = one_msg msg_to_zilswap; send msgs end transition Withdraw(coin : Coin) IsOwner _sender; match coin with | Coin denom amount => match denom with | Zil => msg = { _tag : "AddFunds"; _recipient : _sender; _amount : amount }; msgs = one_msg msg; send msgs | Token token => msg_to_token = { _tag : "Transfer"; _recipient : token; _amount : zero; to : _sender; amount : amount }; msgs = one_msg msg_to_token; send msgs end end end transition AddFunds() accept end transition RecipientAcceptTransfer(sender : ByStr20, recipient: ByStr20, amount: Uint128) end transition TransferSuccessCallBack(sender : ByStr20, recipient : ByStr20, amount : Uint128) end 